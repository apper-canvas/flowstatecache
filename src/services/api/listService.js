import listData from '../mockData/lists.json'

const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))

class ListService {
  constructor() {
    this.lists = [...listData]
  }

  async getAll() {
    await delay(300)
    return [...this.lists]
  }

  async getById(id) {
    await delay(200)
    const list = this.lists.find(l => l.id === id)
    if (!list) {
      throw new Error('List not found')
    }
    return { ...list }
  }

  async create(listData) {
    await delay(400)
    const newList = {
      id: Date.now().toString(),
      ...listData,
      taskIds: listData.taskIds || [],
      isAutoGenerated: listData.isAutoGenerated || false
    }
    this.lists.push(newList)
    return { ...newList }
  }

  async update(id, updates) {
    await delay(350)
    const index = this.lists.findIndex(l => l.id === id)
    if (index === -1) {
      throw new Error('List not found')
    }
    
    this.lists[index] = { ...this.lists[index], ...updates }
    return { ...this.lists[index] }
  }

  async delete(id) {
    await delay(250)
    const index = this.lists.findIndex(l => l.id === id)
    if (index === -1) {
      throw new Error('List not found')
    }
    
    this.lists.splice(index, 1)
    return true
  }
}

export default new ListService()